{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","settext","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5e06076a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n           {/* <li className=\"nav-item\">\r\n             <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\r\n               </li>*/} \r\n         </ul>\r\n         <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n         <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"light\"?\"dark\":\"light\"} Mode</label>\r\n       </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes={ title: PropTypes.string.isRequired,\r\n                   aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={ title: \"Set Title Here\" ,\r\n                       aboutText: \"Set About\"\r\n                        \r\n}\r\n                  \r\n","import React , {useState} from 'react' //rfc\r\n\r\n\r\nexport default function Textform(props) {\r\n  \r\n    const [text, settext] = useState(\"\");              //imrs\r\n    const handleUpClick=()=>{\r\n       // console.log(\"UpperCase was clicked \"+text);\r\n        let newText=text.toUpperCase();\r\n        settext(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        // console.log(\"LowerCase was clicked \"+text);\r\n         let newText=text.toLowerCase();\r\n         settext(newText)\r\n         props.showAlert(\"Converted to LowerCase\", \"success\");\r\n     }\r\n    const handleOnChange=(event)=>{\r\n       // console.log(\"On Change\");\r\n        settext(event.target.value)\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n\r\n        var text=document.getElementById(\"myBox\") ;\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text is Copied\", \"success\");\r\n \r\n    }\r\n    \r\n  \r\n    return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===\"dark\"?\"#343a40\":\"white\", color: props.mode===\"dark\"?\"white\":\"black\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n    </div>\r\n    \r\n    <div className=\"container my-3\" style={{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n    <h1>Your Text Summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'  //rfce   \r\n\r\nfunction Alert(props) {\r\n \r\n const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n }\r\n \r\n    return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter ,\n//   Routes,\n//   Route  \n// } from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const [mode, setMode] = useState(\"dark\");\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert=(message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      }) \n      setTimeout(() => {\n        setAlert(null);\n      },1500);\n  }\n  \n  \n  const toggleMode=()=>{\n    if(mode===\"light\"){\n    setMode(\"dark\");\n    document.body.style.backgroundColor=\"#343a40\";\n    showAlert(\"Dark Mode is enabled\", \"success\");\n    }\n    else{\n    setMode(\"light\");\n    document.body.style.backgroundColor=\"white\"; \n    showAlert(\"Light Mode is enabled\", \"success\");\n  }\n  }\n  \n\n\n  return (\n    <> \n    {/*<BrowserRouter>*/}   \n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    \n    \n    {/*<Routes>*/}\n    {/*<Route exact path=\"/About\" element={<About />}>\n  </Route>*/}\n   <Textform heading=\"Enter text to manipulate\" />\n   \n\n    </div>\n    {/*</BrowserRouter>*/}\n    </> \n     );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}